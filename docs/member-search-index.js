memberSearchIndex = [{"p":"org.DeepJ.ann","c":"Neuron","l":"activation"},{"p":"org.DeepJ.ann","c":"Neuron","l":"activationFunction"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"activationFunction(ActivationFunctions)","u":"activationFunction(org.DeepJ.ann.activationfunctions.ActivationFunctions)"},{"p":"org.DeepJ.annv2","c":"ActivationLayer","l":"ActivationLayer(ActivationFunction)","u":"%3Cinit%3E(org.DeepJ.annv2.activations.ActivationFunction)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"add(Tensor)","u":"add(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"addBroadcastCols(Tensor)","u":"addBroadcastCols(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"addBroadcastRows(Tensor)","u":"addBroadcastRows(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2","c":"NeuralNetwork","l":"addLayer(Layer)","u":"addLayer(org.DeepJ.annv2.Layer)"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"addRow(double[], double[])","u":"addRow(double[],double[])"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"addRow(Row)","u":"addRow(org.DeepJ.dataset.Row)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"addScalar(double)"},{"p":"org.DeepJ.ann","c":"Connection","l":"adjustWeight()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"afterEpoch(EpochOperation)","u":"afterEpoch(org.DeepJ.ann.EpochOperation)"},{"p":"org.DeepJ.convolution","c":"WindowOperation","l":"apply(int, int)","u":"apply(int,int)"},{"p":"org.DeepJ.convolution","c":"Window","l":"apply(int, int, int, int, WindowOperation)","u":"apply(int,int,int,int,org.DeepJ.convolution.WindowOperation)"},{"p":"org.DeepJ.annv2.optimisers","c":"Optimizer","l":"apply(Tensor, Tensor)","u":"apply(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.optimisers","c":"SGDMomentum","l":"apply(Tensor, Tensor)","u":"apply(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"applyActivation()"},{"p":"org.DeepJ.ann.activationfunctions","c":"ActivationFunction","l":"applyActivation(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Heaviside","l":"applyActivation(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Relu","l":"applyActivation(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Sigmoid","l":"applyActivation(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Tanh","l":"applyActivation(double)"},{"p":"org.DeepJ.ann","c":"Layer","l":"applyActivations(double[])"},{"p":"org.DeepJ.convolution","c":"MatrixFilter","l":"applyFilter(double[][], double[][], int)","u":"applyFilter(double[][],double[][],int)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"applySoftmaxBackward(Tensor, Tensor)","u":"applySoftmaxBackward(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"architecture(int...)"},{"p":"org.DeepJ.convolution","c":"PoolingType","l":"AVERAGE"},{"p":"org.DeepJ.ann","c":"Network","l":"backward(double[])"},{"p":"org.DeepJ.annv2.activations","c":"ActivationFunction","l":"backward(Tensor)","u":"backward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.activations","c":"ReLU","l":"backward(Tensor)","u":"backward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.activations","c":"Sigmoid","l":"backward(Tensor)","u":"backward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.activations","c":"Tanh","l":"backward(Tensor)","u":"backward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"backward(Tensor)","u":"backward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"backward(Tensor)","u":"backward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2","c":"ActivationLayer","l":"backward(Tensor, double)","u":"backward(org.DeepJ.transformer.Tensor,double)"},{"p":"org.DeepJ.annv2","c":"DenseLayer","l":"backward(Tensor, double)","u":"backward(org.DeepJ.transformer.Tensor,double)"},{"p":"org.DeepJ.annv2","c":"Layer","l":"backward(Tensor, double)","u":"backward(org.DeepJ.transformer.Tensor,double)"},{"p":"org.DeepJ.annv2","c":"NeuralNetwork","l":"backward(Tensor, double)","u":"backward(org.DeepJ.transformer.Tensor,double)"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"beforeEpoch(EpochOperation)","u":"beforeEpoch(org.DeepJ.ann.EpochOperation)"},{"p":"org.DeepJ.ann","c":"Network","l":"build()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"build()"},{"p":"org.DeepJ.ann","c":"HiddenLayer","l":"build(int, int, HiddenLayer, NetworkBuilder)","u":"build(int,int,org.DeepJ.ann.HiddenLayer,org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.ann","c":"LayerBuilder","l":"build(int, int, HiddenLayer, NetworkBuilder, Class<T>)","u":"build(int,int,org.DeepJ.ann.HiddenLayer,org.DeepJ.ann.NetworkBuilder,java.lang.Class)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"buildConnections()"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunction","l":"calculateActualLoss(double, double)","u":"calculateActualLoss(double,double)"},{"p":"org.DeepJ.ann.lossfunctions","c":"MSE","l":"calculateActualLoss(double, double)","u":"calculateActualLoss(double,double)"},{"p":"org.DeepJ.ann","c":"HiddenNeuron","l":"calculateDelta()"},{"p":"org.DeepJ.ann","c":"OutputNeuron","l":"calculateDelta(double)"},{"p":"org.DeepJ.ann","c":"HiddenLayer","l":"calculateDeltas()"},{"p":"org.DeepJ.ann","c":"OutputLayer","l":"calculateDeltas(double[])"},{"p":"org.DeepJ.ann","c":"Network","l":"calculateLoss()"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunction","l":"calculateLoss(double)"},{"p":"org.DeepJ.ann.lossfunctions","c":"MSE","l":"calculateLoss(double)"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunction","l":"calculateLossOfIteration(OutputLayer)","u":"calculateLossOfIteration(org.DeepJ.ann.OutputLayer)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"calculateNet()"},{"p":"org.DeepJ.ann","c":"Connection","l":"calculateProduct()"},{"p":"org.DeepJ.ann","c":"Connection","l":"calculateWeightedDelta()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"cols"},{"p":"org.DeepJ.ann","c":"Connection","l":"Connection(NetworkBuilder)","u":"%3Cinit%3E(org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.convolution","c":"SlidingWindow","l":"convolve(double[][], int, int, Convolution)","u":"convolve(double[][],int,int,org.DeepJ.convolution.Convolution)"},{"p":"org.DeepJ.annv2.optimisers","c":"OptimizerFactory","l":"create(int, int)","u":"create(int,int)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"data"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"dataSet(DataSet)","u":"dataSet(org.DeepJ.dataset.DataSet)"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"DataSet(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"delta"},{"p":"org.DeepJ.annv2","c":"DenseLayer","l":"DenseLayer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.DeepJ.annv2","c":"DenseLayer","l":"DenseLayer(int, int, OptimizerFactory)","u":"%3Cinit%3E(int,int,org.DeepJ.annv2.optimisers.OptimizerFactory)"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunction","l":"derivative(double)"},{"p":"org.DeepJ.ann.lossfunctions","c":"MSE","l":"derivative(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"ActivationFunction","l":"derivative(double, double)","u":"derivative(double,double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Heaviside","l":"derivative(double, double)","u":"derivative(double,double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Relu","l":"derivative(double, double)","u":"derivative(double,double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Sigmoid","l":"derivative(double, double)","u":"derivative(double,double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Tanh","l":"derivative(double, double)","u":"derivative(double,double)"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"desiredLoss(double)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"divideBroadcastCols(Tensor)","u":"divideBroadcastCols(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"divideScalar(double)"},{"p":"org.DeepJ.ann","c":"Network","l":"epoch(DataSet)","u":"epoch(org.DeepJ.dataset.DataSet)"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"epochs(int)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"flattenTensor(Tensor)","u":"flattenTensor(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Network","l":"forward(double[])"},{"p":"org.DeepJ.annv2","c":"ActivationLayer","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.activations","c":"ActivationFunction","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.activations","c":"ReLU","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.activations","c":"Sigmoid","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.activations","c":"Tanh","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2","c":"DenseLayer","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2","c":"Layer","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2","c":"NeuralNetwork","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"forward(Tensor)","u":"forward(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getActivation()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getActivationFunction()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getActivationFunction()"},{"p":"org.DeepJ.ann","c":"Layer","l":"getActivations()"},{"p":"org.DeepJ.ann","c":"OutputNeuron","l":"getActualLoss()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getAfterEpoch()"},{"p":"org.DeepJ.ann","c":"Network","l":"getArchitecture()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getArchitecture()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getAttention()"},{"p":"org.DeepJ.convolution","c":"Pooling","l":"getAverageValue(double[][], int, int, int, int)","u":"getAverageValue(double[][],int,int,int,int)"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getBeforeEpoch()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getBeta()"},{"p":"org.DeepJ.ann","c":"Network","l":"getCurrentEpoch()"},{"p":"org.DeepJ.ann","c":"Network","l":"getDataSet()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getDataSet()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getDelta()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getDesiredLoss()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getDim()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getdK()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getdL_dOutput()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getdModel()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getdQ()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getdV()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getdWk()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getdWq()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getdWv()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getEpochs()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getEpsilon()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getGamma()"},{"p":"org.DeepJ.convolution","c":"Pooling","l":"getGlobalValue(double[][])"},{"p":"org.DeepJ.ann","c":"Network","l":"getHiddenLayers()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getInput()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getInput()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getInput()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getInputConnections()"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"getInputDimension()"},{"p":"org.DeepJ.ann","c":"Network","l":"getInputGradient()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getInputNeuron()"},{"p":"org.DeepJ.dataset","c":"Row","l":"getInputs()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getK()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getLearningRate()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getLearningRate()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getLearningRate()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getLearningRate()"},{"p":"org.DeepJ.ann","c":"Network","l":"getLossFunction()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getLossFunction()"},{"p":"org.DeepJ.ann","c":"OutputNeuron","l":"getLossFunction()"},{"p":"org.DeepJ.ann","c":"Network","l":"getLossOfEpoch()"},{"p":"org.DeepJ.ann","c":"Network","l":"getLossOfPreviousEpoch()"},{"p":"org.DeepJ.convolution","c":"Pooling","l":"getMaxValue(double[][], int, int, int, int)","u":"getMaxValue(double[][],int,int,int,int)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getMean()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getMomentum()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getMomentum()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getNet()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"getNetwork()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getNetworkBuilder()"},{"p":"org.DeepJ.ann","c":"Network","l":"getNetworkBuilder()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getNetworkBuilder()"},{"p":"org.DeepJ.ann","c":"Layer","l":"getNeurons()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getNormalized()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getNumConnections()"},{"p":"org.DeepJ.ann","c":"Network","l":"getOutput()"},{"p":"org.DeepJ.ann","c":"HiddenNeuron","l":"getOutputConnections()"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"getOutputDimension()"},{"p":"org.DeepJ.ann","c":"Network","l":"getOutputLayer()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getOutputNeuron()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"getPreviousLayer()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getPrevUpdate()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getProduct()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getQ()"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"getRows()"},{"p":"org.DeepJ.ann","c":"OutputLayer","l":"getSize()"},{"p":"org.DeepJ.dataset","c":"Row","l":"getTargets()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getV()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"getVariance()"},{"p":"org.DeepJ.ann","c":"Connection","l":"getWeight()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getWk()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getWq()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"getWv()"},{"p":"org.DeepJ.annv2.loss","c":"LossFunction","l":"gradient(Tensor, Tensor)","u":"gradient(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.loss","c":"MSELoss","l":"gradient(Tensor, Tensor)","u":"gradient(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Heaviside","l":"Heaviside()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann","c":"HiddenLayer","l":"HiddenLayer()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann","c":"HiddenNeuron","l":"HiddenNeuron(Integer, HiddenLayer, NetworkBuilder)","u":"%3Cinit%3E(java.lang.Integer,org.DeepJ.ann.HiddenLayer,org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"inputConnections"},{"p":"org.DeepJ.ann","c":"Layer","l":"Layer()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann","c":"LayerBuilder","l":"LayerBuilder()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"LayerNorm(int)","u":"%3Cinit%3E(int)"},{"p":"org.DeepJ.ann","c":"Network","l":"learn()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"learningRate(double)"},{"p":"org.DeepJ.persistence","c":"PersistenceManager","l":"loadNetwork(String)","u":"loadNetwork(java.lang.String)"},{"p":"org.DeepJ.annv2.loss","c":"LossFunction","l":"loss(Tensor, Tensor)","u":"loss(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.annv2.loss","c":"MSELoss","l":"loss(Tensor, Tensor)","u":"loss(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunction","l":"LossFunction()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"lossFunction(LossFunctions)","u":"lossFunction(org.DeepJ.ann.lossfunctions.LossFunctions)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"matmul(Tensor)","u":"matmul(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.convolution","c":"MatrixFilter","l":"MatrixFilter()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"matrixOp(BiConsumer<Integer, Integer>)","u":"matrixOp(java.util.function.BiConsumer)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"matrixOp(BiConsumer<Integer, Integer>, Tensor)","u":"matrixOp(java.util.function.BiConsumer,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"matrixOp(BiConsumer<Integer, Integer>, Tensor, Tensor)","u":"matrixOp(java.util.function.BiConsumer,org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.convolution","c":"PoolingType","l":"MAX"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"meanAlongRows()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"momentum(double)"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunctions","l":"MSE"},{"p":"org.DeepJ.ann.lossfunctions","c":"MSE","l":"MSE()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.annv2.loss","c":"MSELoss","l":"MSELoss()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"mseLoss(Tensor)","u":"mseLoss(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"multiply(Tensor)","u":"multiply(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"multiplyBroadcastCols(Tensor)","u":"multiplyBroadcastCols(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"multiplyBroadcastRows(Tensor)","u":"multiplyBroadcastRows(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"multiplyScalar(double)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"net"},{"p":"org.DeepJ.ann","c":"Network","l":"Network()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"network(Network)","u":"network(org.DeepJ.ann.Network)"},{"p":"org.DeepJ.ann","c":"NetworkBuilder","l":"NetworkBuilder()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.annv2","c":"NeuralNetwork","l":"NeuralNetwork()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"Neuron(Integer, HiddenLayer, NetworkBuilder)","u":"%3Cinit%3E(java.lang.Integer,org.DeepJ.ann.HiddenLayer,org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.ann","c":"Layer","l":"neurons"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"ones(int, int)","u":"ones(int,int)"},{"p":"org.DeepJ.ann","c":"OutputLayer","l":"OutputLayer()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann","c":"OutputNeuron","l":"OutputNeuron(Integer, HiddenLayer, NetworkBuilder)","u":"%3Cinit%3E(java.lang.Integer,org.DeepJ.ann.HiddenLayer,org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.convolution","c":"Convolution","l":"perform(int, int)","u":"perform(int,int)"},{"p":"org.DeepJ.ann","c":"EpochOperation","l":"perform(Network)","u":"perform(org.DeepJ.ann.Network)"},{"p":"org.DeepJ.persistence","c":"PersistenceManager","l":"PersistenceManager()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.convolution","c":"Pooling","l":"pool(double[][], int, int, PoolingType)","u":"pool(double[][],int,int,org.DeepJ.convolution.PoolingType)"},{"p":"org.DeepJ.convolution","c":"Pooling","l":"Pooling()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"pow(double)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"print(String)","u":"print(java.lang.String)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"random(int, int, Random)","u":"random(int,int,java.util.Random)"},{"p":"org.DeepJ.ann.activationfunctions","c":"ActivationFunctions","l":"RELU"},{"p":"org.DeepJ.ann.activationfunctions","c":"Relu","l":"Relu()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.annv2.activations","c":"ReLU","l":"ReLU()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann.activationfunctions","c":"Relu","l":"relu(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Relu","l":"reluDerivative(double)"},{"p":"org.DeepJ.dataset","c":"Row","l":"Row(double[], double[])","u":"%3Cinit%3E(double[],double[])"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"rows"},{"p":"org.DeepJ.ann","c":"Network","l":"save(String)","u":"save(java.lang.String)"},{"p":"org.DeepJ.persistence","c":"PersistenceManager","l":"saveNetwork(Object, String)","u":"saveNetwork(java.lang.Object,java.lang.String)"},{"p":"org.DeepJ.persistence","c":"PersistenceManager","l":"saveWeightsAsJsonFile(Object, String)","u":"saveWeightsAsJsonFile(java.lang.Object,java.lang.String)"},{"p":"org.DeepJ.ann","c":"Network","l":"saveWeightsAsJsonFile(String)","u":"saveWeightsAsJsonFile(java.lang.String)"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"SelfAttentionLayer(int)","u":"%3Cinit%3E(int)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setActivation(double)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setActivationFunction(ActivationFunction)","u":"setActivationFunction(org.DeepJ.ann.activationfunctions.ActivationFunction)"},{"p":"org.DeepJ.ann","c":"Layer","l":"setActivations(double[])"},{"p":"org.DeepJ.ann","c":"OutputNeuron","l":"setActualLoss(double)"},{"p":"org.DeepJ.ann","c":"Network","l":"setArchitecture(int[])"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setBeta(Tensor)","u":"setBeta(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Network","l":"setCurrentEpoch(int)"},{"p":"org.DeepJ.ann","c":"Network","l":"setDataSet(DataSet)","u":"setDataSet(org.DeepJ.dataset.DataSet)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setDelta(double)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setdL_dOutput(Tensor)","u":"setdL_dOutput(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setGamma(Tensor)","u":"setGamma(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Network","l":"setHiddenLayers(List<HiddenLayer>)","u":"setHiddenLayers(java.util.List)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setInput(double)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setInput(Tensor)","u":"setInput(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setInputConnections(List<Connection>)","u":"setInputConnections(java.util.List)"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"setInputDimension(int)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setInputNeuron(Neuron)","u":"setInputNeuron(org.DeepJ.ann.Neuron)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setInputs(double[])"},{"p":"org.DeepJ.dataset","c":"Row","l":"setInputs(double[])"},{"p":"org.DeepJ.ann","c":"Connection","l":"setLearningRate(double)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setLearningRate(double)"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"setLearningRate(double)"},{"p":"org.DeepJ.ann","c":"Network","l":"setLossFunction(LossFunction)","u":"setLossFunction(org.DeepJ.ann.lossfunctions.LossFunction)"},{"p":"org.DeepJ.ann","c":"OutputNeuron","l":"setLossFunction(LossFunction)","u":"setLossFunction(org.DeepJ.ann.lossfunctions.LossFunction)"},{"p":"org.DeepJ.ann","c":"Network","l":"setLossOfEpoch(double)"},{"p":"org.DeepJ.ann","c":"Network","l":"setLossOfPreviousEpoch(double)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setMean(Tensor)","u":"setMean(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setMomentum(double)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setNet(double)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setNetworkBuilder(NetworkBuilder)","u":"setNetworkBuilder(org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.ann","c":"Network","l":"setNetworkBuilder(NetworkBuilder)","u":"setNetworkBuilder(org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setNetworkBuilder(NetworkBuilder)","u":"setNetworkBuilder(org.DeepJ.ann.NetworkBuilder)"},{"p":"org.DeepJ.ann","c":"Layer","l":"setNeurons(List<T>)","u":"setNeurons(java.util.List)"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setNormalized(Tensor)","u":"setNormalized(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setNumConnections(int)"},{"p":"org.DeepJ.ann","c":"Network","l":"setOutput(double[])"},{"p":"org.DeepJ.ann","c":"HiddenNeuron","l":"setOutputConnections(List<Connection>)","u":"setOutputConnections(java.util.List)"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"setOutputDimension(int)"},{"p":"org.DeepJ.ann","c":"Network","l":"setOutputLayer(OutputLayer)","u":"setOutputLayer(org.DeepJ.ann.OutputLayer)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setOutputNeuron(Neuron)","u":"setOutputNeuron(org.DeepJ.ann.Neuron)"},{"p":"org.DeepJ.ann","c":"Neuron","l":"setPreviousLayer(HiddenLayer)","u":"setPreviousLayer(org.DeepJ.ann.HiddenLayer)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setPrevUpdate(double)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setProduct(double)"},{"p":"org.DeepJ.dataset","c":"DataSet","l":"setRows(List<Row>)","u":"setRows(java.util.List)"},{"p":"org.DeepJ.dataset","c":"Row","l":"setTargets(double[])"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"setVariance(Tensor)","u":"setVariance(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.ann","c":"Connection","l":"setWeight(double)"},{"p":"org.DeepJ.annv2.optimisers","c":"SGDMomentum","l":"SGDMomentum(double, double)","u":"%3Cinit%3E(double,double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"ActivationFunctions","l":"SIGMOID"},{"p":"org.DeepJ.ann.activationfunctions","c":"Sigmoid","l":"Sigmoid()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.annv2.activations","c":"Sigmoid","l":"Sigmoid()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann.activationfunctions","c":"Sigmoid","l":"sigmoid(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Sigmoid","l":"sigmoidDerivative(double, double)","u":"sigmoidDerivative(double,double)"},{"p":"org.DeepJ.convolution","c":"SlidingWindow","l":"SlidingWindow()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"softmaxRows(Tensor)","u":"softmaxRows(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"sqrt()"},{"p":"org.DeepJ.ann.activationfunctions","c":"Heaviside","l":"step(double)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"subtract(Tensor)","u":"subtract(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"subtractBroadcastCols(Tensor)","u":"subtractBroadcastCols(org.DeepJ.transformer.Tensor)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"sum()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"sumAlongCols()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"sumAlongRows()"},{"p":"org.DeepJ.ann","c":"HiddenNeuron","l":"sumWeightedDeltasFromInputs()"},{"p":"org.DeepJ.ann","c":"HiddenNeuron","l":"sumWeightedDeltasFromOutputs()"},{"p":"org.DeepJ.ann.activationfunctions","c":"ActivationFunctions","l":"TANH"},{"p":"org.DeepJ.ann.activationfunctions","c":"Tanh","l":"Tanh()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.annv2.activations","c":"Tanh","l":"Tanh()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.ann.activationfunctions","c":"Tanh","l":"tanh(double)"},{"p":"org.DeepJ.ann.activationfunctions","c":"Tanh","l":"tanhDerivative(double, double)","u":"tanhDerivative(double,double)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"Tensor(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"Tensor(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.DeepJ.annv2","c":"NeuralNetwork","l":"train(Tensor, Tensor, LossFunction, int, double)","u":"train(org.DeepJ.transformer.Tensor,org.DeepJ.transformer.Tensor,org.DeepJ.annv2.loss.LossFunction,int,double)"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"transpose()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"unflattenToTensor(double[], int, int)","u":"unflattenToTensor(double[],int,int)"},{"p":"org.DeepJ.ann","c":"Layer","l":"updateWeights()"},{"p":"org.DeepJ.ann","c":"Network","l":"updateWeights()"},{"p":"org.DeepJ.ann","c":"Neuron","l":"updateWeights()"},{"p":"org.DeepJ.transformer","c":"LayerNorm","l":"updateWeights()"},{"p":"org.DeepJ.transformer","c":"SelfAttentionLayer","l":"updateWeights()"},{"p":"org.DeepJ.ann.activationfunctions","c":"ActivationFunctions","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunctions","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.DeepJ.convolution","c":"PoolingType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.DeepJ.ann.activationfunctions","c":"ActivationFunctions","l":"values()"},{"p":"org.DeepJ.ann.lossfunctions","c":"LossFunctions","l":"values()"},{"p":"org.DeepJ.convolution","c":"PoolingType","l":"values()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"varianceAlongRows()"},{"p":"org.DeepJ.convolution","c":"Window","l":"Window()","u":"%3Cinit%3E()"},{"p":"org.DeepJ.transformer","c":"Tensor","l":"zeros(int, int)","u":"zeros(int,int)"}];updateSearchResults();